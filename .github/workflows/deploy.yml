name: Java CI with Maven

# 동작 조건 설정: main 브랜치에 push 또는 pull request가 발생할 경우 동작
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Spring Boot 애플리케이션을 빌드하여 Docker Hub에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # 1. Java 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      # 2. application.properties 파일 생성
      - name: Create application.properties file
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      # 3. Maven을 사용하여 Spring Boot 애플리케이션 빌드
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4. Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ainterview .

      # 5. Docker Hub 로그인
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 6. Docker Hub에 이미지 푸시
      - name: Push Docker image to Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/ainterview

  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      # 1. 최신 이미지를 풀받기
      - name: Pull latest Docker image
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ainterview

      # 2. 기존의 'ainterview' 컨테이너 중지
      - name: Stop existing 'ainterview' container
        run: |
          if [ $(sudo docker ps -q -f name=ainterview) ]; then
            sudo docker stop ainterview
          fi

      # 3. 최신 이미지를 기반으로 새로운 컨테이너 실행
      - name: Run new 'ainterview' container
        run: sudo docker run --name ainterview --rm -d -p 8081:8081 ${{ secrets.DOCKERHUB_USERNAME }}/ainterview

      # 4. 미사용 Docker 리소스 정리
#      - name: Prune unused Docker resources
#        run: sudo docker system prune -f
